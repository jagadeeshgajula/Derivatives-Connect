/*
 * fixingRates.cpp
 *
 *  Created on: 12-Nov-2010
 *      Author: vishist
 */

#include <iostream>
#include "fixingRates.h"

using namespace std;
using namespace IRDConnect;

FixingRates::FixingRates(
String 		quoteId,
Date 		quoteDate,
String 		quoteType,
double 		rate,
String 		lastModifiedBy,
Date 		modifiedTimestamp,
String 		lastVerifiedBy,
Date 		verifiedTimestamp,
Date 		currentDate,
String 		ratesetMode)
{

_quoteId					=	quoteId;
_quoteDate					=	quoteDate;
 _quoteType					=	quoteType;
_rate						=	rate;
_lastModifiedBy 			= 	lastModifiedBy;
_modifiedTimestamp 			= 	modifiedTimestamp;
_lastVerifiedBy 			=	lastVerifiedBy;
_verifiedTimestamp			=	verifiedTimestamp;
_currentDate				=	currentDate;
_ratesetMode				=	ratesetMode;
}

FixingRates::~FixingRates()
{
	//do nothing
}

void FixingRates::init()
{

	FixingRates fixingRates;

	int noOfResets = 1;
	double rate = 0.05;

	_fixingRatesList.clear();

	fixingRates.setQuoteId("GBPDOM_3M.T3750");
	fixingRates.setQuoteDate(Date(15,10,2010));
	fixingRates.setRate(0.8456);

	_fixingRatesList.push_back(fixingRates);

	fixingRates.setQuoteId("GBPDOM_3M.T3750");
	fixingRates.setQuoteDate(Date(17,1,2011));
	fixingRates.setRate(0.86368);

	_fixingRatesList.push_back(fixingRates);

	fixingRates.setQuoteId("GBPDOM_3M.T3750");
	fixingRates.setQuoteDate(Date(15,4,2011));
	fixingRates.setRate(0.99514);

	_fixingRatesList.push_back(fixingRates);


	fixingRates.setQuoteId("GBPDOM_3M.T3750");
	fixingRates.setQuoteDate(Date(15,7,2011));
	fixingRates.setRate(1.17508);

	_fixingRatesList.push_back(fixingRates);


	fixingRates.setQuoteId("GBPDOM_3M.T3750");
	fixingRates.setQuoteDate(Date(17,10,2011));
	fixingRates.setRate(1.34175);

	_fixingRatesList.push_back(fixingRates);


	fixingRates.setQuoteId("GBPDOM_3M.T3750");
	fixingRates.setQuoteDate(Date(16,1,2012));
	fixingRates.setRate(1.56141);

	_fixingRatesList.push_back(fixingRates);



	fixingRates.setQuoteId("GBPDOM_3M.T3750");
	fixingRates.setQuoteDate(Date(16,4,2012));
	fixingRates.setRate(1.60637);

	_fixingRatesList.push_back(fixingRates);


	fixingRates.setQuoteId("GBPDOM_3M.T3750");
	fixingRates.setQuoteDate(Date(16,7,2012));
	fixingRates.setRate(0.92197);

	_fixingRatesList.push_back(fixingRates);


	fixingRates.setQuoteId("GBPDOM_3M.T3750");
	fixingRates.setQuoteDate(Date(15,10,2012));
	fixingRates.setRate(1.30809);

	_fixingRatesList.push_back(fixingRates);


	while ( noOfResets != 1000 )
	{
		rate = rate + 0.0005;



		fixingRates.setQuoteId("GBPDOM_6M.T3750");
		fixingRates.setQuoteDate(Date(11,10,2010) + Period(noOfResets,Days));
		fixingRates.setRate(rate + 0.002);

		_fixingRatesList.push_back(fixingRates);

		fixingRates.setQuoteId("GBPDOM_1M.T3750");
		fixingRates.setQuoteDate(Date(11,10,2010) + Period(noOfResets,Days));
		fixingRates.setRate(rate - 0.001);

		_fixingRatesList.push_back(fixingRates);


		fixingRates.setQuoteId("GBPDOM_2M.T3750");
		fixingRates.setQuoteDate(Date(11,10,2010) + Period(noOfResets,Days));
		fixingRates.setRate(rate + 0.0005);

		_fixingRatesList.push_back(fixingRates);
		noOfResets++;

	}

	// only when we need to debug
	/*
			std::list < FixingRates > ::iterator iterFixingRates = FixingRates::getFixingRatesList().begin () ;

					int resetsCnt = FixingRates::getFixingRatesList().size();
					cout << "No of Elements are :" << resetsCnt;


			         for ( ; iterFixingRates != FixingRates::getFixingRatesList().end () ; ++iterFixingRates )
			         {

			        	 cout << "Fixing Rates are : ";
			        	 cout << iterFixingRates->getQuoteId() << " : " <<  iterFixingRates->getQuoteDate() << " : " << iterFixingRates->getRate() << endl;
			         }

   */

}

double FixingRates::getFixingRate( Date date, String quoteId)
{

	std::list < FixingRates > ::iterator iterFixingRates = FixingRates::getFixingRatesList().begin () ;

						//int resetsCnt = FixingRates::getFixingRatesList().size();
						//cout << "No of Elements are :" << resetsCnt << endl;;


				         for ( ; iterFixingRates != FixingRates::getFixingRatesList().end () ; ++iterFixingRates )
				         {

				        	 if ( iterFixingRates->getQuoteDate() == date &&  iterFixingRates->getQuoteId() == quoteId )
				        	 {
				        		 //cout << "Fixing Quote, Date and Rate are : ";
				        		 //cout << iterFixingRates->getQuoteId() << " : " << iterFixingRates->getQuoteDate() << " : " << iterFixingRates->getRate() << endl;
				        		 return iterFixingRates->getRate()/100;
				        	 }
				         }
return -1.0; // should never come here

}

string FixingRates::getFixingQuote( String index,  std::string stubTenor)
{
	return stubTenor; // need more logic
}
