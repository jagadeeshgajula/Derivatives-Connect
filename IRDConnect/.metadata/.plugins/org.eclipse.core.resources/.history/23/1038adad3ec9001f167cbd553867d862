/*
 * money.cpp
 *
 *  Created on: 26-Sep-2010
 *      Author: vishist
 */


#include "IRDMoney.h"
#include "IRDCurrency.h"
#
//#include "roundconv.h"
#include <assert.h>
//#include "envparam.h"

 using namespace std;


 static const unsigned int    EURO_ROUNDCONV =5;

IRDMoney&
IRDMoney::operator+=(const IRDMoney& other)
{
	assert(getCurrency() == other.getCurrency());
	_amount += other._amount;
	return *this;
}

IRDMoney&
IRDMoney::operator-=(const IRDMoney& other)
{
	assert(getCurrency() == other.getCurrency());
	_amount -= other._amount;
	return *this;
}

IRDMoney&
IRDMoney::operator*=(double qty)
{
	_amount *= qty;
	return *this;
}

IRDMoney&
IRDMoney::operator/=(double qty)
{
	_amount /= qty;
	return *this;
}

IRDMoney
IRDMoney::operator-() const
{
	return IRDMoney(-_amount, _currency);
}

IRDMoney
IRDMoney::operator+(const IRDMoney& money) const
{
	IRDMoney m(*this);
	m += money;
	return m;
}

IRDMoney
IRDMoney::operator-(const IRDMoney& money) const
{
	IRDMoney m(*this);
	m -= money;
	return m;
}


IRDMoney
IRDMoney::operator*( double qty ) const
{
	return IRDMoney( _amount * qty, _currency );
}

IRDMoney
IRDMoney::convert( const IRDCurrency * toCcy, Date valueDate ) const
{
	if(_currency == 0)
		return IRDMoney(0, toCcy);

	if (toCcy == _currency)
		return IRDMoney( _amount, toCcy );
}
IRDMoney
IRDMoney::convert( const IRDCurrency * toCcy ) const
{
	if(_currency == 0)
		return IRDMoney(0, toCcy);

	if (toCcy == _currency)
		return IRDMoney( _amount, toCcy );

	const Date & emuDay = EnvParam::emuDate();



	if( DateTime::getValuationDate() >= emuDay &&
				 toCcy->isInEMU() && _currency->isInEMU() ) {
        const IRDCurrency * euroCcy = IRDCurrency::eur;
        // rounding of euro to 5 decimal is required
        const RoundingConv * roundingConv = euroCcy->getRoundingConv();
        double amt = _amount/_currency->getEuroConvRate();
        amt = roundingConv->round( amt, EURO_ROUNDCONV);
        IRDMoney euro = IRDMoney( amt, euroCcy);
		return euro.convert(toCcy);
	}

	// apart from above cases everything is ok with the old code
	double	fxRate = (*_fxFun)(_currency, toCcy);
	double amount = _amount * fxRate;
	return IRDMoney( amount, toCcy );
}


double
IRDMoney::calcRoundedAmount(double amt) const
{
	if ( _currency ) {
		const RoundingConv * roundingConv = _currency -> getRoundingConv();
		if ( roundingConv ) {
			const unsigned int numDecimal = _currency -> getNumDecimal();
			amt = roundingConv -> round( amt, numDecimal );
		}
	}
	return amt;
}


