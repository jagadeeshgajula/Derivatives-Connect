/*
 * fixingRates.cpp
 *
 *  Created on: 12-Nov-2010
 *      Author: vishist
 */

#include <iostream>
#include "fixingRates.h"

using namespace std;
using namespace IRDConnect;

FixingRates::FixingRates(
String quoteId,
Date quoteDate,
String quoteType,
double rate,
String makerId,
Date makerTimestamp,
String checkerId,
Date checkerTimestamp,
Date currentDate,
String ratesetMode)
{

_quoteId			=	quoteId;
_quoteDate			=	quoteDate;
 _quoteType			=	quoteType;
_rate				=	rate;
_makerId 			= 	makerId;
_makerTimestamp 	= 	makerTimestamp;
_checkerId 			=	checkerId;
_checkerTimestamp	=	checkerTimestamp;
_currentDate		=	currentDate;
_ratesetMode		=	ratesetMode;
}

FixingRates::~FixingRates()
{
	//do nothing
}

void FixingRates::init()
{

	FixingRates fixingRates;

	int noOfResets = 1;
	double rate = 0.05;

	_fixingRatesList.clear();

	while ( noOfResets != 1000 )
	{
		rate = rate + 0.0005;

		fixingRates.setQuoteId("GBPDOM_3M.T3750");
		fixingRates.setQuoteDate(Date(11,10,2010) + Period(noOfResets,Days));
		fixingRates.setRate(rate + 0.001);

		_fixingRatesList.push_back(fixingRates);

		fixingRates.setQuoteId("GBPDOM_6M.T3750");
		fixingRates.setQuoteDate(Date(11,10,2010) + Period(noOfResets,Days));
		fixingRates.setRate(rate + 0.002);

		_fixingRatesList.push_back(fixingRates);

		fixingRates.setQuoteId("GBPDOM_1M.T3750");
		fixingRates.setQuoteDate(Date(11,10,2010) + Period(noOfResets,Days));
		fixingRates.setRate(rate - 0.001);

		_fixingRatesList.push_back(fixingRates);


		fixingRates.setQuoteId("GBPDOM_2M.T3750");
		fixingRates.setQuoteDate(Date(11,10,2010) + Period(noOfResets,Days));
		fixingRates.setRate(rate + 0.0005);

		_fixingRatesList.push_back(fixingRates);
		noOfResets++;

	}

	// only when we need to debug
	/*
			std::list < FixingRates > ::iterator iterFixingRates = FixingRates::getFixingRatesList().begin () ;

					int resetsCnt = FixingRates::getFixingRatesList().size();
					cout << "No of Elements are :" << resetsCnt;


			         for ( ; iterFixingRates != FixingRates::getFixingRatesList().end () ; ++iterFixingRates )
			         {

			        	 cout << "Fixing Rates are : ";
			        	 cout << iterFixingRates->getQuoteId() << " : " <<  iterFixingRates->getQuoteDate() << " : " << iterFixingRates->getRate() << endl;
			         }

   */

}

double FixingRates::getFixingRate( Date date, String quoteId)
{

	std::list < FixingRates > ::iterator iterFixingRates = FixingRates::getFixingRatesList().begin () ;

						//int resetsCnt = FixingRates::getFixingRatesList().size();
						//cout << "No of Elements are :" << resetsCnt << endl;;


				         for ( ; iterFixingRates != FixingRates::getFixingRatesList().end () ; ++iterFixingRates )
				         {

				        	 if ( iterFixingRates->getQuoteDate() == date &&  iterFixingRates->getQuoteId() == quoteId )
				        	 {
				        		 //cout << "Fixing Quote, Date and Rate are : ";
				        		 //cout << iterFixingRates->getQuoteId() << " : " << iterFixingRates->getQuoteDate() << " : " << iterFixingRates->getRate() << endl;
				        		 return iterFixingRates->getRate();
				        	 }
				         }
return -1.0;

}
